{"version":3,"sources":["logo.svg","components/Navigation.js","components/DecryptingText.js","components/About.js","components/projects/modules/LazyVideo.js","components/projects/modules/MalwareFramework.js","components/projects/modules/Ncrypt.js","components/projects/modules/MealLogger.js","components/projects/Projects.js","components/Links.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","props","selection","alreadySelected","onlySelectInActive","route","change","className","onClick","getRandomByteCharacter","rng","Math","floor","random","String","fromCharCode","generateRandomString","plaintext","toLowerCase","newString","DecryptingText","iterations","timeout","baseString","iterationForEachLetter","useState","currentString","indexedCharacter","length","done","decryptionState","setDecryptionState","iterateLetter","stringToIterateAtIndex","index","charAt","back","front","substring","iterateCorrectLetter","correctString","iterateDecryption","newIndex","useEffect","decryptionAnimationID","setInterval","clearInterval","DecryptStringAnimation","textContent","About","forwardRef","ref","id","LazyVideo","title","src","MalwareFramework","Ncrypt","target","rel","href","icon","faGooglePlay","MealLogger","faGithub","alt","Project","leftNav","rightNav","loadVideo","projectView","setProjectView","animateIn","nextIndex","animationTransition","setAnimateTransition","clickableNav","setClickableNav","changeView","increment","left","faChevronLeft","color","theme","contentText","disabled","right","faChevronRight","CSSTransition","classNames","in","addEndListener","node","addEventListener","e","loadingVideo","nexIndex","newView","lazyVideo","getIndexContent","PersonalLinks","faLinkedin","ReactDefault","App","content","animating","setAnimating","useLocation","pathname","slice","navSelected","setNavSelected","redirect","redirectTo","console","log","to","unmountOnExit","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2696695.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import './Navigation.scss'\nimport React from 'react';\n\nfunction Navigation(props) {\n    \n    let selection = {\n        \"about\": false,\n        \"projects\": false,\n        \"links\": false,\n        \"hosting\": false\n    };\n\n    // If user's navigate to \"/\" it will return \"\" from useLocation()\n    if(props.selection===\"\") {\n        selection[\"about\"] = true;\n    } else {\n        selection[props.selection] = true;\n    }\n\n    let alreadySelected = false;\n\n    function onlySelectInActive (route) {\n        // Prevent navigating to a new location while animation plays\n        if(alreadySelected){\n            return;\n        }\n        \n        if(!selection[route]) {\n            alreadySelected = true;\n            props.change(route);\n        }\n    }\n\n    return (\n        <div className=\"Navigation-bar\">\n            <div \n                className={\"nav-item btn-lg btn-foreground rounded-0\"+ (selection[\"about\"] ? \" active\" : \"\")} \n                onClick={()=>{onlySelectInActive(\"about\")}}>\n                About\n            </div>\n            <div \n                className={\"nav-item btn-lg btn-foreground rounded-0\"+ (selection[\"projects\"] ? \" active\" : \"\")} \n                onClick={()=>{onlySelectInActive(\"projects\")}}>\n                Projects\n            </div>\n            <div \n                className={\"nav-item btn-lg btn-foreground rounded-0\"+ (selection[\"links\"] ? \" active\" : \"\")} \n                onClick={()=>{onlySelectInActive(\"links\")}}>\n                Links\n            </div>\n            <div \n                className={\"nav-item btn-lg btn-foreground rounded-0\"+(selection[\"hosting\"] ? \" active\" : \"\")} \n                onClick={()=>{onlySelectInActive(\"hosting\")}}>\n                Hosting\n            </div>\n      </div>\n    )\n}\n\nexport default Navigation;","import { useEffect, useState } from \"react\";\n\nfunction DecryptingText(props) {\n    // The amount of iterations to decrypt for each letter\n    // Can be defined in props.iterations\n    let iterations;\n    if(!props.iterations) {\n        iterations = 3;\n    } else {\n        iterations = props.iterations;\n    }\n\n    // Timeout in ms of each letter change\n    // Defined in props.timeout\n    let timeout;\n    if(!props.timeout) {\n        timeout = 10;\n    } else {\n        timeout = props.timeout;\n    }\n\n    const displayedString = DecryptStringAnimation(props.textContent, iterations, timeout);\n\n    return displayedString         \n}\n\n// This component\nfunction DecryptStringAnimation(baseString, iterationForEachLetter, timeout) {\n    const [decryptionState, setDecryptionState] = useState({\n        currentString: generateRandomString(baseString),\n        indexedCharacter: baseString.length-1,\n        iterations: iterationForEachLetter,\n        done: false\n    });\n\n    // Takes stringToIterateAtIndex and index\n    // Returns new string with iterated index\n    function iterateLetter(stringToIterateAtIndex, index) {\n        // Reverse decryption direction (left to right)\n        index = stringToIterateAtIndex.length-1 - index;\n        // Ignore space\n        if(stringToIterateAtIndex.charAt(index)===' ') {\n            return stringToIterateAtIndex;\n        }\n\n        let front = stringToIterateAtIndex.substring(0, index);\n        let back;\n        if(index!==stringToIterateAtIndex.length-1){\n            back = stringToIterateAtIndex.substring(index + 1);\n        } else {\n            back = \"\";\n        }\n\n        let newString = front + getRandomByteCharacter() + back;\n        return newString;\n    }\n\n    function iterateCorrectLetter(stringToIterateAtIndex, index, correctString) {\n        // Reverse decryption direction (left to right)\n        index = stringToIterateAtIndex.length - 1 - index;\n        \n        let front = stringToIterateAtIndex.substring(0, index);\n        let back;\n        if(index!==stringToIterateAtIndex.length-1){\n            back = stringToIterateAtIndex.substring(index + 1);\n        } else {\n            back = \"\";\n        }\n\n        let newChar = correctString.charAt(index);\n        return front + newChar + back;\n    }\n\n    // If the string starts with a space, the initial space will be attempted\n    function iterateDecryption() {\n        if(decryptionState.iterations>0){\n            setDecryptionState({\n                currentString: iterateLetter(decryptionState.currentString, decryptionState.indexedCharacter),\n                indexedCharacter: decryptionState.indexedCharacter,\n                iterations: decryptionState.iterations-1,\n                done: false\n            })\n        } else if(decryptionState.indexedCharacter!==0) {\n            let newIndex = decryptionState.indexedCharacter-1;\n            let newString = iterateCorrectLetter(decryptionState.currentString, decryptionState.indexedCharacter, baseString);\n            // check if space, skip if it is\n            if(decryptionState.currentString[newIndex]===' '){\n                // Set the space to the correct character\n                newString = iterateCorrectLetter(newString, newIndex, baseString)\n                newIndex = newIndex - 1;\n            }\n\n            setDecryptionState({\n                currentString: newString,\n                indexedCharacter: newIndex,\n                iterations: iterationForEachLetter,\n                done: false\n            })\n        } else {\n            setDecryptionState({\n                currentString: baseString,\n                indexedCharacter: 0,\n                iterations: 0,\n                done: true\n            })\n        }\n    \n    }\n\n    useEffect(()=>{\n        if(!decryptionState.done){\n            var decryptionAnimationID = setInterval( () => iterateDecryption(), timeout);\n            return function cleanup() {\n                clearInterval(decryptionAnimationID);\n            };\n        }\n    })\n\n    return decryptionState.currentString;\n}\n\nfunction getRandomByteCharacter () {\n    // Get a random character [0-9A-F]\n    let rng = Math.floor(Math.random() * 15);\n    let newChar;\n    if(rng > 9) {\n        newChar = String.fromCharCode(65+(rng-10));\n    } else {\n        newChar = String.fromCharCode(48+rng);\n    }\n    return newChar\n}\n\nfunction generateRandomString (plaintext) {\n    plaintext = plaintext.toLowerCase();\n    let newString = \"\"\n    for(let character of plaintext) {\n        // ignore spaces\n        if(character===' ') {\n            newString += ' ';\n        }\n        else {\n            newString += getRandomByteCharacter();\n        }\n        \n    }\n\n    return newString;\n}\n\nexport default DecryptingText;","import { forwardRef } from \"react\";\nimport DecryptingText from \"./DecryptingText\";\nimport \"../App.scss\"\n\nconst About = forwardRef((props, ref) => {\n    return(\n        <div ref={ref} >\n\n            <h1 id=\"App-header\" className=\"text-nowrap\">\n                <DecryptingText \n                textContent={\"Michael Jereza\"} \n                timeout={40}\n                /></h1>\n                <div className=\"col-sm-12 col-md-8 m-auto text-left\">\n                    <p>\n                        Welcome to my website.\n                        I am a full-stack web developer with experience working on interactive web applications and exchanging information through API implementations. I want to apply my skillset to protect against known and unknown threats using security practices.\n                    </p>\n                    <p>\n                        I have a detailed background in network security, including network fuzzing and diagnostics. As well as a general security skillset that includes digital forensics, penetration testing, and reverse engineering.\n                    </p>\n\n                    <p >\n                        I will soon graduate from Oregon State University with a Bachelor of the Sciences in Computer Science.\n                        At the University I've gained important developer skills for low-level languages, web applications, and mobile development.\n                        I work as an IT developer. At my job I maintain multiple projects, across different web stacks, bundling web applications, and auditing process logs.\n                    </p>\n                </div>\n            \n        </div>\n    )\n});\n\nexport default About;","// Contains bootstrap for responsive iframe\nfunction LazyVideo (props) {\n    return(\n        <div className=\"embed-responsive embed-responsive-16by9\" >\n            <iframe title=\"Embedded Youtube Demonstration\" className=\"Embedded-youtube\"\n                src=\"https://youtube.com/embed/brfiW2lZ9N4\">\n            </iframe>\n        </div>\n    )\n}\n\nexport default LazyVideo;","import {Suspense, lazy } from \"react\";\n\nimport LazyVideo from \"./LazyVideo\";\n\nfunction MalwareFramework (props) {\n\n    // let LazyVideo;\n\n    // LazyVideo = lazy(()=>import(\"./LazyVideo\"));\n\n    return (\n        <div>\n            <h2 className=\"text-center\">Malware Framework</h2>\n            <div className=\"m-auto col-md-10 col-sm-12\">\n                <p className=\"text-left\">My 2020 senior capstone project is a demonstration of multiple types of malware. My group is developing a denial of service attack, rootkit, keylogger, and ransomware. The goal of this project is to provide a high-level overview of malware, as well as provide a framework for future malware research capstones projects.</p>\n                <LazyVideo />                     \n            </div>\n            {/* <Suspense fallback={<h1>Loading...</h1>}> */}\n            {/* </Suspense> */}\n        </div>\n        \n    )\n}\nexport default MalwareFramework;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGooglePlay } from '@fortawesome/free-brands-svg-icons';\n\nfunction Ncrypt () {\n    return (\n        <div>\n            <span className=\"row no-gutters align-items-center justify-content-center pb-1\">\n                <a className=\"App-link row\" target=\"_blank\" rel=\"noreferrer\" href=\"https://play.google.com/store/apps/details?id=com.mike.android.ncrypt\">\n                    <FontAwesomeIcon icon={faGooglePlay}/>\n                    <h2 className=\"pl-3\">Ncrypt</h2>\n                </a>\n            </span>\n            <p className=\"m-auto col-md-10 col-sm-12\">I developed this Java-based Android application in early 2020, during my week-long spring break. My mom used to store passwords in plaintext on her phone, so I wanted to protect her from being compromised. I had also recently finished the Mobile Development class at OSU, and I wanted to design a \"fun\" and but useful application for security. The conclusion was an encryption vault that is fun and simple to use.</p>\n        </div>\n    )\n}\nexport default Ncrypt;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\n\nfunction MealLogger () {\n    return (\n        <div>\n            <div className=\"row no-gutters align-items-center justify-content-center pb-1\">\n                <a className=\"App-link row\" target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/MichaelJereza/final-project-meal-logger\">\n                    <FontAwesomeIcon icon={faGithub}/>\n                    <h2 className=\"pl-3\">Meal Logger</h2>\n                </a>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md-5 ml-auto col-sm-12 text-left\">\n                    <p>Meal Logger allows a user to record their meal items, calculating the total nutritional value for the meal. The application uses the USDA Food Data Central API to query food names and their nutritional values.A user can export their meal in the form of a nutritional label. The logging interface also allows the user to capture an image and determines the appropriate meal based on recording time.</p>\n                </div>\n                <div className=\"col-md-5 mr-auto col-sm-12 text-center\">\n                    <img alt=\"Meal Logger Food Label\" className=\"img-fluid rounded\" src=\"https://raw.githubusercontent.com/MichaelJereza/final-project-meal-logger/master/images/meal_label.png\"/>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default MealLogger;","import {Suspense, lazy, useState, useEffect } from \"react\";\nimport {CSSTransition} from 'react-transition-group'; // ES6\n\nimport DecryptingText from \"../DecryptingText\";\nimport MalwareFramework from \"./modules/MalwareFramework\";\nimport Ncrypt from \"./modules/Ncrypt\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons'\nimport MealLogger from \"./modules/MealLogger\";\n\nimport './Projects.css'\nimport theme from '../../_theme.scss'\n\nfunction Project (props) {\n\n    const [projectView, setProjectView] = useState({\n        index: 0,\n        loadVideo: true,\n    });\n\n    const [animationTransition, setAnimateTransition] = useState({\n        animateIn: true,\n        nextIndex: null\n    });\n\n    function getIndexContent(nexIndex) {\n        let newView;\n        switch(nexIndex) {\n            case 0:\n                newView = <Ncrypt />;                    \n                break;\n            case 1: \n                newView = <MalwareFramework lazyVideo={projectView.loadVideo}/>;\n                break;\n            case 2:\n                newView = <MealLogger />;\n                break;\n            default:\n        }\n\n        return newView;\n    }\n\n    const [clickableNav, setClickableNav] = useState({\"left\": true, \"right\": true});\n\n    let leftNav, rightNav;\n    \n    if(clickableNav.left && projectView.index !== 0) {\n        leftNav = (\n        <button onClick={()=>{changeView(-1)}} className=\"btn btn-link\" >\n            <FontAwesomeIcon icon={faChevronLeft} color={theme.contentText}/>\n        </button>)\n    } else {\n        leftNav = (\n        <button onClick={()=>{changeView(-1)}} className=\"btn btn-link\" disabled>\n            <FontAwesomeIcon icon={faChevronLeft} color={theme.contentText}/>\n        </button>)\n    }\n\n    if(clickableNav.right && projectView.index !== 2) {\n        rightNav = (\n        <button onClick={()=>{changeView(1)}} className=\"btn btn-link\" >\n            <FontAwesomeIcon icon={faChevronRight} color={theme.contentText}/>\n        </button>)\n    } else {\n        rightNav = (\n        <button onClick={()=>{changeView(1)}} className=\"btn btn-link\" disabled>\n            <FontAwesomeIcon icon={faChevronRight} color={theme.contentText}/>\n        </button>)\n    }\n\n    // increment should be +1 or -1\n    function changeView(increment) {\n        let newIndex = projectView.index + increment\n        if(newIndex >= 0 && newIndex <= 2) {\n            // Close animation and set next\n            setAnimateTransition({\n                animateIn: false,\n                nextIndex: newIndex\n            });\n        }\n    }\n\n    useEffect(()=>{\n        // Play the show animation\n        setAnimateTransition({\n            animateIn: true,\n            nextIndex: null,\n        })\n    }, [projectView.index])\n\n    useEffect(()=>{\n        if(animationTransition.animateIn === false){\n            setClickableNav({\n                \"left\": false,\n                \"right\": false\n            });\n        }\n\n        \n    }, [animationTransition.animateIn]);\n\n    return(\n\n        <div className=\"text-justify\">\n\n\n            <span className=\"d-flex justify-content-between\">\n                {/* <button onClick={()=>{changeView(-1)}} className=\"btn btn-link\">\n                    <FontAwesomeIcon icon={faChevronLeft} color=\"white\"/>\n                </button> */}\n                {leftNav}\n\n                <h1><DecryptingText \n                    textContent=\"Projects\" \n                    timeout={40}\n                    iterations={3}/></h1>\n\n                {/* <button onClick={()=>{changeView(1)}} className=\"btn btn-link\" >\n                    <FontAwesomeIcon icon={faChevronRight} color=\"white\"/>\n                </button> */}\n                {rightNav}\n            </span>\n\n\n            <CSSTransition\n                classNames=\"project-transition\"\n                in={animationTransition.animateIn}\n                addEndListener={\n                    (node, done) => {node.addEventListener('transitionend',(e) => {\n                        if(animationTransition.animateIn===false){\n                            // setContent(getIndexContent(projectView.index));\n                            let loadingVideo = false;\n                            if(animationTransition.nextIndex == 0) {\n                                loadingVideo = true;\n                            }\n                            setProjectView({\n                                index: animationTransition.nextIndex,\n                                loadVideo: loadingVideo\n                            })\n                        } else {\n                            setClickableNav({\n                                \"left\": true,\n                                \"right\": true\n                            })\n                        }\n                        done(e);\n                    }, false);}\n                }>\n                { getIndexContent(projectView.index) }    \n            </CSSTransition>  \n\n\n        </div>\n    )  \n};\n\nexport default Project;","import { forwardRef } from \"react\";\nimport DecryptingText from \"./DecryptingText\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub, faLinkedin, faGooglePlay } from '@fortawesome/free-brands-svg-icons'\nimport theme from \"../index.scss\"\n\nconst PersonalLinks = forwardRef((props, ref) => {\n    return(\n        // <TransitionGroup          transitionName=\"slide\"          transitionEnterTimeout={500}          transitionLeaveTimeout={300}>\n\n            <div ref={ref} >\n                <h1><DecryptingText\n                    textContent={\"Links\"}\n                    timeout={25}\n                    iterations={3}\n                    /></h1>\n                <div className=\"text-justify\">\n                    \n                    <h2><a target=\"_blank\" rel=\"noreferrer\" href=\"https://play.google.com/store/apps/details?id=com.mike.android.ncrypt\" className=\"App-link\">\n                        <FontAwesomeIcon icon={faGooglePlay} color={theme.contentText}/>\n                        <DecryptingText textContent={\"Ncrypt\"} timeout={80}/>\n                    </a></h2>\n                    <h2><a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.linkedin.com/in/michael-jereza-360107181/\" className=\"App-link\">\n                        <FontAwesomeIcon icon={faLinkedin} color={theme.contentText}/>\n                        <DecryptingText textContent={\"LinkedIn\"} timeout={73}/>\n                    </a></h2>\n                    <h2><a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/MichaelJereza\" className=\"App-link\">\n                        <FontAwesomeIcon icon={faGithub} color={theme.contentText}/>\n                        <DecryptingText textContent={\"Github\"} timeout={80}/>\n                    </a></h2>\n                </div>\n            </div>\n        \n        // </TransitionGroup>\n    )\n});\n\nexport default PersonalLinks;","import logo from './logo.svg';\nimport './App.scss';\nimport NavigationPanel from './components/Navigation';\nimport About from './components/About';\nimport Projects from './components/projects/Projects';\nimport PersonalLinks from './components/Links';\n\nimport React, { forwardRef, useEffect, useState} from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect,\n  useLocation\n} from \"react-router-dom\";\n\nimport {CSSTransition} from 'react-transition-group'; // ES6\nimport DecryptingText from './components/DecryptingText';\n\nfunction App () {\n\n  const [animating, setAnimating] = useState(true);\n  const [navSelected, setNavSelected] = useState(useLocation().pathname.slice(1));\n  const [redirect, redirectTo] = useState(null);\n\n  console.log(`Location ${useLocation().pathname}`)\n\n  // Change the page from NavigationPanel\n  function cyclePage(route){\n    setAnimating(false);\n    setNavSelected(route);\n  }\n\n  let content;\n\n  // Remove redirect so it only renders oncce\n  useEffect(() => {\n    if(redirect!==null) {\n      redirectTo(null);\n    } \n    else if(redirect===null) {\n      setAnimating(true);\n    }\n    \n  }, [redirect])\n  \n  if(redirect) {\n\n    content = <Redirect to={\"/\"+redirect}/>;\n  \n  } else {\n\n    content = (\n      <div id=\"App-content\">\n        {/* <div id=\"App-content-border\"></div>   */}\n        <CSSTransition\n          classNames=\"folder\"\n          in={animating}\n          addEndListener={\n            (node, done) => {node.addEventListener('transitionend',(e) => {\n              if(animating===false && redirect===null){\n                redirectTo(navSelected);\n              }\n              done(e);\n            }, {\"once\": true});}\n          }\n          unmountOnExit={true}>\n          <div id=\"Content-border\">\n            <Switch >\n              <Route exact path = {[\"/\", \"/about\"]}>\n                <About/>\n              </Route>\n              <Route path = \"/projects\">\n                <Projects/>\n              </Route>\n              <Route path = \"/links\">\n                <PersonalLinks/>\n              </Route>\n              <Route path = \"/hosting\">\n                <ReactDefault/>\n              </Route>\n            </Switch>\n          </div>\n        </CSSTransition>\n         \n      </div>\n    );\n\n  }\n\n  return (\n\n    <div className=\"App container-fluid p-0\">\n      <NavigationPanel selection={navSelected} change={cyclePage}/>\n      {content}\n    </div>\n      \n  );\n}\n\nconst ReactDefault = forwardRef((props, ref) => {\n  return(\n    <header ref={ref} >\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        <p>This website was built with:</p>\n        <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item text-nowrap\"><DecryptingText \n            textContent=\"React\"\n            timeout={80}\n            iterations={3}\n            /></li>\n          <li className=\"list-group-item text-nowrap\"><DecryptingText \n            textContent=\"Webpack\"\n            timeout={80}\n            iterations={3}\n            /></li>\n          <li className=\"list-group-item text-nowrap\"><DecryptingText \n            textContent=\"Node Package Manager\"\n            timeout={33}\n            iterations={3}\n            /></li>\n          <li className=\"list-group-item text-nowrap\"><DecryptingText \n            textContent=\"Express\"\n            timeout={80}\n            iterations={3}\n            /></li>\n          <li className=\"list-group-item text-nowrap\"><DecryptingText \n            textContent=\"Github\"\n            timeout={55}\n            iterations={3}\n            /></li>\n        </ul>\n    </header>    \n  )\n});\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/js/bootstrap.bundle.min.js';\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n// import \"../node_modules/bootstrap/scss\";\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}